name: CI Workflow

# Trigger the workflow on push and pull requests for master branch and feature branches
on:
  push:
    branches:
      - master
      - "feature/*"
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x] # Test across multiple Node.js versions

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment using the specified version
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Step 3: Cache npm dependencies to speed up builds
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      # Step 4: Install npm dependencies
      - name: Install dependencies
        run: npm install
        continue-on-error: false # If the installation fails, stop the workflow

      # Step 5: Run npm audit to check for vulnerabilities
      - name: Run npm audit
        run: npm audit --audit-level=high
        continue-on-error: true # Allow the workflow to continue even if vulnerabilities are found

      # # Step 6: Run Gulp tasks
      # - name: Run Gulp tasks
      #   run: npm run gulp
      #   continue-on-error: true # Fail the workflow if Gulp tasks fail

      # Step 7: Run tests (optional if you have tests defined)
      - name: Run tests
        run: npm test
        continue-on-error: false # Fail the workflow if any test fails

      # Step 8: Handle error reporting (custom)
      - name: Check vulnerabilities report
        if: failure() && steps.npm-audit.outcome == 'failure'
        run: |
          echo "NPM Audit detected high vulnerabilities. Please review."
          exit 1  # Fail the workflow if vulnerabilities were found in audit
